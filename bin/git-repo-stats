#!/usr/bin/perl

use strict;
use warnings;

my %stats = &stats;
my %totals = &totals(%stats);
my @authors = keys %{$stats{'log'}};

# Figure out the column widths
my $col0_length = length("Author");
my $col1_length = length("Current");
my $col2_length = length("Historical");
foreach my $author (@authors) {
    if (length($author) > $col0_length) {
        $col0_length = length($author);
    }
}

# Output
my $line_format = "% -${col0_length}s % ${col1_length}s % ${col2_length}s\n";
printf($line_format, "Author", "Current", "Historical");
print "" . ("-" x ($col0_length + $col1_length + $col2_length + 2)) . "\n";
foreach my $author (sort {$stats{'blame'}{$b} <=> $stats{'blame'}{$a}} @authors) {
    printf(
        $line_format,
        $author,
        sprintf('%.2f%%', ($stats{'blame'}{$author} / $totals{'blame'}) * 100),
        sprintf('%.2f%%', ($stats{'log'}{$author} / $totals{'log'}) * 100)
    );
}

sub stats {
    my %stats;

    my $mailmap = '';
    if (-f "$ENV{HOME}/.mailmap") {
        $mailmap = "-c mailmap.file=$ENV{HOME}/.mailmap"
    } else {
        my $git_root = `git rev-parse --show-toplevel`; chomp $git_root;
        if (-d $git_root && -d "$git_root/.mailmap") {
            $mailmap = "-c mailmap.file=$git_root/.mailmap"
        }
    }

    foreach my $file (&files) {
        my %blame = &blame($file, $mailmap);
        my %log = &log($file, $mailmap);

        foreach (keys %log) {
            $stats{'log'}{$_} += $log{$_};
            $stats{'blame'}{$_} = 0 unless $stats{'blame'}{$_};
        }
        foreach (keys %blame) {
            $stats{'blame'}{$_} += $blame{$_};
        }
    }
    return %stats;
}

sub totals {
    my %stats = @_;

    my %totals;
    foreach my $author (keys %{$stats{'blame'}}) {
        $totals{'blame'} += $stats{'blame'}{$author};
    }
    foreach my $author (keys %{$stats{'log'}}) {
        $totals{'log'} += $stats{'log'}{$author};
    }

    return %totals;
}

sub files {
    my @files;
    if (open(LS, "git grep --cached -I -l -e ''|")) {
        while (<LS>) {
            chomp;
            if (-f $_) {
                push @files, $_;
            }
        }
    }
    return @files;
}

sub blame {
    my $file = shift;
    my $mailmap = shift;

    my %stats;
    if (open(BLAME, "git $mailmap blame --line-porcelain $file|")) {
        while (<BLAME>) {
            if (/^author (.*)$/o) {
                chomp;
                $stats{$1}++;
            }
        }
    }
    return %stats;
}

sub log {
    my $file = shift;
    my $mailmap = shift;

    my %stats;
    my $author;
    if (open(LOG, "git $mailmap log --stat --format='format:author %aN' $file|")) {
        while (<LOG>) {
            chomp;
            if (/^author (.*)$/o) {
                $author = $1;
            } elsif (/^ 1 file changed(?:, (\d+) insertions?...)?(?:, (\d+) deletions?...)?/o) {
                my $inserts = $1 || 0;
                my $deletes = $2 || 0;
                $stats{$author} += ($inserts + $deletes);
            }
        }
    }
    return %stats;
}
